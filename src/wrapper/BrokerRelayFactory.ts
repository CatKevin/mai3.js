/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BrokerRelay } from "./BrokerRelay";

export class BrokerRelayFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BrokerRelay> {
    return super.deploy(overrides || {}) as Promise<BrokerRelay>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BrokerRelay {
    return super.attach(address) as BrokerRelay;
  }
  connect(signer: Signer): BrokerRelayFactory {
    return super.connect(signer) as BrokerRelayFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrokerRelay {
    return new Contract(address, _abi, signerOrProvider) as BrokerRelay;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "minTradeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tradeGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "TradeFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "minTradeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tradeGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasReward",
        type: "uint256",
      },
    ],
    name: "TradeSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "SUPPORTED_MAX_ORDER_VERSION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPPORTED_MIN_ORDER_VERSION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "minTradeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tradeGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
        ],
        internalType: "struct Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "int256[]",
        name: "amounts",
        type: "int256[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "gasRewards",
        type: "uint256[]",
      },
    ],
    name: "batchTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611370806100206000396000f3fe6080604052600436106100595760003560e01c80632e1a7d4d1461006d57806341a351091461008d57806370a08231146100ad5780637164a245146100e3578063d0e30db014610105578063fb8165f9146100e357610068565b3661006857610066610109565b005b600080fd5b34801561007957600080fd5b50610066610088366004610ce7565b6101d2565b34801561009957600080fd5b506100666100a8366004610b3c565b6102a6565b3480156100b957600080fd5b506100cd6100c8366004610b22565b610527565b6040516100da919061118d565b60405180910390f35b3480156100ef57600080fd5b506100f8610546565b6040516100da9190611196565b6100665b60026001541415610161576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260015533600090815260346020526040902054610180903461054b565b33600081815260346020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c916101c4913490610ee4565b60405180910390a160018055565b6002600154141561022a576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001553360009081526034602052604090205461024990826105ac565b3360008181526034602052604090209190915561026690826105ee565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643382604051610297929190610ee4565b60405180910390a15060018055565b8660005b8181101561051a576102ba610a5e565b8a8a838181106102c657fe5b905061018002018036038101906102dd9190610c27565b905060008989848181106102ed57fe5b905060200201359050600086868581811061030457fe5b9050602002013590506000610318846106d8565b90506103278460000151610527565b821115610362576000805160206112f783398151915281858560405161034f9392919061107e565b60405180910390a150505050505061051d565b836101200151821115610390576000805160206112f783398151915281858560405161034f9392919061101e565b8361010001516103a76103a2856107e9565b610809565b10156103ce576000805160206112f783398151915281858560405161034f93929190610fb0565b83606001516001600160a01b031663e93a95a985858d8d8a8181106103ef57fe5b905060200281019061040191906111a7565b6040518563ffffffff1660e01b81526004016104209493929190611146565b600060405180830381600087803b15801561043a57600080fd5b505af192505050801561044b575060015b6104ba57610457611216565b806104625750610499565b6000805160206112f7833981519152828686846040516104859493929190610f36565b60405180910390a15050505050505061051d565b6000805160206112f783398151915281858560405161034f939291906110b6565b6104cd8460000151856020015184610860565b7f2c4fe092a67589bd53315969ea778448898ccc64cfd5f5840e2a001c22e61e7c81858585604051610502949392919061110b565b60405180910390a15050600190920191506102aa9050565b50505b5050505050505050565b6001600160a01b0381166000908152603460205260409020545b919050565b600181565b6000828201838110156105a5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60006105a583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061095a565b80471015610643576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461068e576040519150601f19603f3d011682016040523d82523d6000602084013e610693565b606091505b50509050806106d35760405162461bcd60e51b815260040180806020018281038252603a8152602001806112bd603a913960400191505060405180910390fd5b505050565b6000806040516020016106ea90610dfa565b6040516020818303038152906040528051906020012083604051602001610712929190610f21565b60405160208183030381529060405280519060200120905060405160200161073990610ebb565b60408051601f1981840301815282825280516020918201208383018352600f84526e4d61692050726f746f636f6c20763360881b9382019390935290516107a392917f553f7e2049687f24030220180e64af84dd1272d5c99c4810278beb4f6e74e3099101610dd1565b60405160208183030381529060405280519060200120816040516020016107cb929190610ddf565b60405160208183030381529060405280519060200120915050919050565b600080821215610801576107fc826109f1565b610803565b815b92915050565b600080821215610801576040805162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015290519081900360640190fd5b8061086a576106d3565b6001600160a01b0383166000908152603460205260409020548111156108ab5760405162461bcd60e51b81526004016108a290611134565b60405180910390fd5b6001600160a01b0383166000908152603460205260409020546108ce90826105ac565b6001600160a01b0380851660009081526034602052604080822093909355908416815220546108fd908261054b565b6001600160a01b0383166000908152603460205260409081902091909155517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061094d90859085908590610efd565b60405180910390a1505050565b600081848411156109e95760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109ae578181015183820152602001610996565b50505050905090810190601f1680156109db5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60006108036000836000818303818312801590610a0e5750838113155b80610a235750600083128015610a2357508381135b6105a55760405162461bcd60e51b81526004018080602001828103825260248152602001806113176024913960400191505060405180910390fd5b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b80356001600160a01b038116811461054157600080fd5b60008083601f840112610aea578182fd5b50813567ffffffffffffffff811115610b01578182fd5b6020830191508360208083028501011115610b1b57600080fd5b9250929050565b600060208284031215610b33578081fd5b6105a582610ac2565b6000806000806000806000806080898b031215610b57578384fd5b883567ffffffffffffffff80821115610b6e578586fd5b818b0191508b601f830112610b81578586fd5b813581811115610b8f578687fd5b8c602061018083028501011115610ba4578687fd5b60209283019a509850908a01359080821115610bbe578586fd5b610bca8c838d01610ad9565b909850965060408b0135915080821115610be2578586fd5b610bee8c838d01610ad9565b909650945060608b0135915080821115610c06578384fd5b50610c138b828c01610ad9565b999c989b5096995094979396929594505050565b6000610180808385031215610c3a578182fd5b610c43816111ec565b9050610c4e83610ac2565b8152610c5c60208401610ac2565b6020820152610c6d60408401610ac2565b6040820152610c7e60608401610ac2565b606082015260808301356080820152610c9960a08401610ac2565b60a082015260c0838101359082015260e08084013590820152610100808401359082015261012080840135908201526101408084013590820152610160928301359281019290925250919050565b600060208284031215610cf8578081fd5b5035919050565b6001600160a01b03169052565b601081526f696e73756666696369656e742066656560801b602082015260400190565b610d3a828251610cff565b6020810151610d4c6020840182610cff565b506040810151610d5f6040840182610cff565b506060810151610d726060840182610cff565b506080810151608083015260a0810151610d8f60a0840182610cff565b5060c0818101519083015260e0808201519083015261010080820151908301526101208082015190830152610140808201519083015261016090810151910152565b918252602082015260400190565b61190160f01b81526002810192909252602282015260420190565b7f4f726465722861646472657373207472616465722c616464726573732062726f81527f6b65722c616464726573732072656c617965722c61646472657373206c69717560208201527f6964697479506f6f6c2c616464726573732072656665727265722c696e74323560408201527f3620616d6f756e742c696e743235362070726963654c696d69742c627974657360608201527f333220646174612c75696e7432353620636861696e4944290000000000000000608082015260980190565b7f454950373132446f6d61696e28737472696e67206e616d652900000000000000815260190190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b8281526101a081016105a56020830184610d2f565b60006101e08683526020610f4c81850188610d2f565b856101a0850152816101c0850152845180838601528392505b80831015610f8457858301820151858401610200015291810191610f65565b80831115610f96578361020082870101525b601f01601f19169390930161020001979650505050505050565b60006101e0858352610fc56020840186610d2f565b836101a0840152806101c0840152602481840152507f616d6f756e74206973206c657373207468616e206d696e20747261646520616d610200830152631bdd5b9d60e21b61022083015261024082019050949350505050565b60006101e08583526110336020840186610d2f565b836101a0840152806101c0840152601b81840152507f666565206578636565647320747261646520676173206c696d6974000000000061020083015261022082019050949350505050565b60006101e08583526110936020840186610d2f565b836101a0840152806101c08401526110ac818401610d0c565b9695505050505050565b60006101e08583526110cb6020840186610d2f565b836101a0840152806101c084015260128184015250711d1c985b9cd858dd1a5bdb8819985a5b195960721b61020083015261022082019050949350505050565b8481526101e081016111206020830186610d2f565b6101a08201939093526101c0015292915050565b60006020825261080360208301610d0c565b60006101c06111558388610d2f565b85610180840152806101a08401528381840152506101e0838582850137828401810191909152601f909201601f191601019392505050565b90815260200190565b63ffffffff91909116815260200190565b6000808335601e198436030181126111bd578283fd5b83018035915067ffffffffffffffff8211156111d7578283fd5b602001915036819003821315610b1b57600080fd5b60405181810167ffffffffffffffff8111828210171561120857fe5b604052919050565b60e01c90565b600060443d1015611226576112b9565b600481823e6308c379a061123a8251611210565b14611244576112b9565b6040513d600319016004823e80513d67ffffffffffffffff816024840111818411171561127457505050506112b9565b8284019250825191508082111561128e57505050506112b9565b503d830160208284010111156112a6575050506112b9565b601f01601f191681016020016040529150505b9056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465642a95fb017669e124fba7103b1c5582bcfcf37e9d6450f8f66a1695d5da7ad8335369676e6564536166654d6174683a207375627472616374696f6e206f766572666c6f77a26469706673582212204f97237ac177c1d77d3b4141fef439cc4936377c63e131850c87092a0aa76aa364736f6c63430007040033";
