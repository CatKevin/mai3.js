/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BrokerRelay } from "./BrokerRelay";

export class BrokerRelayFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BrokerRelay> {
    return super.deploy(overrides || {}) as Promise<BrokerRelay>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BrokerRelay {
    return super.attach(address) as BrokerRelay;
  }
  connect(signer: Signer): BrokerRelayFactory {
    return super.connect(signer) as BrokerRelayFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrokerRelay {
    return new Contract(address, _abi, signerOrProvider) as BrokerRelay;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "TradeFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Order",
        name: "order",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasReward",
        type: "uint256",
      },
    ],
    name: "TradeSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "SUPPORTED_MAX_ORDER_VERSION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPPORTED_MIN_ORDER_VERSION",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "address",
            name: "broker",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "marketIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "int256",
            name: "amount",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "priceLimit",
            type: "int256",
          },
          {
            internalType: "bytes32",
            name: "data",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct Order[]",
        name: "orders",
        type: "tuple[]",
      },
      {
        internalType: "int256[]",
        name: "amounts",
        type: "int256[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "gasRewards",
        type: "uint256[]",
      },
    ],
    name: "batchTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f22806100206000396000f3fe6080604052600436106100595760003560e01c80632e1a7d4d1461006d57806370a082311461008d5780637164a245146100c35780639247dd88146100e5578063d0e30db014610105578063fb8165f9146100c357610068565b3661006857610066610109565b005b600080fd5b34801561007957600080fd5b50610066610088366004610b5b565b6101d2565b34801561009957600080fd5b506100ad6100a83660046109ac565b6102a6565b6040516100ba9190610e2f565b60405180910390f35b3480156100cf57600080fd5b506100d86102c5565b6040516100ba9190610e38565b3480156100f157600080fd5b506100666101003660046109c6565b6102ca565b6100665b60026001541415610161576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026001553360009081526034602052604090205461018090346104d2565b33600081815260346020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c916101c4913490610d1f565b60405180910390a160018055565b6002600154141561022a576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6002600155336000908152603460205260409020546102499082610533565b336000818152603460205260409020919091556102669082610575565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243643382604051610297929190610d1f565b60405180910390a15060018055565b6001600160a01b0381166000908152603460205260409020545b919050565b600181565b8660005b818110156104c55760008484838181106102e457fe5b9050602002013590506103138b8b848181106102fc57fe5b6100a89260206101409092020190810191506109ac565b85858481811061031f57fe5b90506020020135111561034d5760405162461bcd60e51b815260040161034490610dbe565b60405180910390fd5b6103556108f8565b8b8b8481811061036157fe5b905061014002018036038101906103789190610ab1565b905060008a8a8581811061038857fe5b905060200201359050600061039c8361065f565b905082606001516001600160a01b031663c0ca7b1584848d8d8a8181106103bf57fe5b90506020028101906103d19190610e49565b6040518563ffffffff1660e01b81526004016103f09493929190610de8565b600060405180830381600087803b15801561040a57600080fd5b505af192505050801561041b575060015b610465577f87702778725edc352450797d8d354ff86ce322630bda0b6c364395b8b85d7e3781848460405161045293929190610d71565b60405180910390a15050505050506104c8565b6104788360000151846020015186610770565b7f2a808ae50c92693a16e07487629935ad18141cddd49993be10dbc413935d90c2818484876040516104ad9493929190610d95565b60405180910390a15050600190920191506102ce9050565b50505b5050505050505050565b60008282018381101561052c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600061052c83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610861565b804710156105ca576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610615576040519150601f19603f3d011682016040523d82523d6000602084013e61061a565b606091505b505090508061065a5760405162461bcd60e51b815260040180806020018281038252603a815260200180610eb3603a913960400191505060405180910390fd5b505050565b60008060405160200161067190610c35565b6040516020818303038152906040528051906020012083604051602001610699929190610d5c565b6040516020818303038152906040528051906020012090506040516020016106c090610cf6565b60408051601f1981840301815282825280516020918201208383018352600f84526e4d61692050726f746f636f6c20763360881b93820193909352905161072a92917f553f7e2049687f24030220180e64af84dd1272d5c99c4810278beb4f6e74e3099101610c0c565b6040516020818303038152906040528051906020012081604051602001610752929190610c1a565b60405160208183030381529060405280519060200120915050919050565b8061077a5761065a565b6001600160a01b0383166000908152603460205260409020548111156107b25760405162461bcd60e51b815260040161034490610dbe565b6001600160a01b0383166000908152603460205260409020546107d59082610533565b6001600160a01b03808516600090815260346020526040808220939093559084168152205461080490826104d2565b6001600160a01b0383166000908152603460205260409081902091909155517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061085490859085908590610d38565b60405180910390a1505050565b600081848411156108f05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108b557818101518382015260200161089d565b50505050905090810190601f1680156108e25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b80356001600160a01b03811681146102c057600080fd5b60008083601f840112610974578182fd5b50813567ffffffffffffffff81111561098b578182fd5b60208301915083602080830285010111156109a557600080fd5b9250929050565b6000602082840312156109bd578081fd5b61052c8261094c565b6000806000806000806000806080898b0312156109e1578384fd5b883567ffffffffffffffff808211156109f8578586fd5b818b0191508b601f830112610a0b578586fd5b813581811115610a19578687fd5b8c602061014083028501011115610a2e578687fd5b60209283019a509850908a01359080821115610a48578586fd5b610a548c838d01610963565b909850965060408b0135915080821115610a6c578586fd5b610a788c838d01610963565b909650945060608b0135915080821115610a90578384fd5b50610a9d8b828c01610963565b999c989b5096995094979396929594505050565b6000610140808385031215610ac4578182fd5b610acd81610e8e565b9050610ad88361094c565b8152610ae66020840161094c565b6020820152610af76040840161094c565b6040820152610b086060840161094c565b606082015260808301356080820152610b2360a0840161094c565b60a082015260c0838101359082015260e080840135908201526101008084013590820152610120928301359281019290925250919050565b600060208284031215610b6c578081fd5b5035919050565b6001600160a01b03169052565b610b8b828251610b73565b6020810151610b9d6020840182610b73565b506040810151610bb06040840182610b73565b506060810151610bc36060840182610b73565b506080810151608083015260a0810151610be060a0840182610b73565b5060c0818101519083015260e08082015190830152610100808201519083015261012090810151910152565b918252602082015260400190565b61190160f01b81526002810192909252602282015260420190565b7f4f726465722861646472657373207472616465722c616464726573732062726f81527f6b65722c616464726573732072656c617965722c61646472657373206c69717560208201527f6964697479506f6f6c2c616464726573732072656665727265722c696e74323560408201527f3620616d6f756e742c696e743235362070726963654c696d69742c627974657360608201527f333220646174612c75696e7432353620636861696e4944290000000000000000608082015260980190565b7f454950373132446f6d61696e28737472696e67206e616d652900000000000000815260190190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b828152610160810161052c6020830184610b80565b8381526101808101610d866020830185610b80565b82610160830152949350505050565b8481526101a08101610daa6020830186610b80565b610160820193909352610180015292915050565b60208082526010908201526f696e73756666696369656e742066656560801b604082015260600190565b6000610180610df78388610b80565b85610140840152806101608401528381840152506101a0838582850137828401810191909152601f909201601f191601019392505050565b90815260200190565b63ffffffff91909116815260200190565b6000808335601e19843603018112610e5f578283fd5b83018035915067ffffffffffffffff821115610e79578283fd5b6020019150368190038213156109a557600080fd5b60405181810167ffffffffffffffff81118282101715610eaa57fe5b60405291905056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564a2646970667358221220fdd645c3e5b65ad9315e8ab6c75539bda8d66c9314f4057ba19a2cdb707e5f0d64736f6c63430007040033";
