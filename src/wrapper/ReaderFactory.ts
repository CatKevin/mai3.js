/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Reader } from "./Reader";

export class ReaderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  connect(signer: Signer): ReaderFactory {
    return super.connect(signer) as ReaderFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "perpetualIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountStorage",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "cash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "position",
            type: "int256",
          },
        ],
        internalType: "struct MarginAccount",
        name: "marginAccount",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
    ],
    name: "getLiquidityPoolStorage",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRunning",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFastCreationEnabled",
            type: "bool",
          },
          {
            internalType: "address[7]",
            name: "addresses",
            type: "address[7]",
          },
          {
            internalType: "int256",
            name: "vaultFeeRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolCash",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "collateralDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perpetualCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum PerpetualState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "int256[34]",
                name: "nums",
                type: "int256[34]",
              },
              {
                internalType: "uint256",
                name: "symbol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "underlyingAsset",
                type: "string",
              },
              {
                internalType: "int256",
                name: "ammCashBalance",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammPositionAmount",
                type: "int256",
              },
            ],
            internalType: "struct Reader.PerpetualReaderResult[]",
            name: "perpetuals",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.LiquidityPoolReaderResult",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d51806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063574408c11461003b578063eb16510d14610064575b600080fd5b61004e6100493660046106de565b610084565b60405161005b9190610be8565b60405180910390f35b610077610072366004610716565b61024b565b60405161005b9190610c7c565b61008c6105e1565b6000826001600160a01b0316630cdc105a6040518163ffffffff1660e01b81526004016101c06040518083038186803b1580156100c857600080fd5b505afa1580156100dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010091906107f8565b60e08a015260a0890191909152608088019190915260608701919091526040860182905291151560208601529115158452915060009081602002015190506000816001600160a01b0316632c03f6d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561017957600080fd5b505afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b191906106fa565b90508267ffffffffffffffff811180156101ca57600080fd5b5060405190808252806020026020018201604052801561020457816020015b6101f1610631565b8152602001906001900390816101e95790505b5061010085015260005b838110156102425761023a856101000151828151811061022a57fe5b60200260200101518388846102eb565b60010161020e565b50505050919050565b610253610672565b604051637d3ba80f60e01b81526001600160a01b03851690637d3ba80f906102819086908690600401610c9c565b61010060405180830381600087803b15801561029c57600080fd5b505af11580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d49190610955565b505050506020850192909252505081529392505050565b6040516204966760e11b81526001600160a01b0383169062092cce90610315908490600401610c93565b61048060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036891906108be565b604087018190526001600160a01b03821660208801528683600481111561038b57fe5b600481111561039657fe5b8152505050506103a78383836104cb565b84606001818152505083602001516001600160a01b0316637158da7c6040518163ffffffff1660e01b815260040160006040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261042991908101906109c8565b6080850152604051637d3ba80f60e01b81526001600160a01b03831690637d3ba80f9061045c9084908690600401610c9c565b61010060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190610955565b5050505060c0880192909252505060a090940193909352505050565b60006060846001600160a01b031663745a3f7485856040518363ffffffff1660e01b81526004016104fd929190610ba5565b60006040518083038186803b15801561051557600080fd5b505afa158015610529573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105519190810190610757565b805190915060018110156105805760405162461bcd60e51b815260040161057790610bbe565b60405180910390fd5b60001960005b828110156105be576105b484828151811061059d57fe5b6020026020010151836105c990919063ffffffff16565b9150600101610586565b509695505050505050565b60008183106105d857816105da565b825b9392505050565b60408051610120810182526000808252602082015290810161060161068c565b81526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040805160e081018252600080825260208201529081016106506106aa565b8152602001600081526020016060815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518061044001604052806022906020820280368337509192915050565b805180151581146106d957600080fd5b919050565b6000602082840312156106ef578081fd5b81356105da81610d03565b60006020828403121561070b578081fd5b81516105da81610d03565b60008060006060848603121561072a578182fd5b833561073581610d03565b925060208401359150604084013561074c81610d03565b809150509250925092565b60006020808385031215610769578182fd5b825167ffffffffffffffff80821115610780578384fd5b818501915085601f830112610793578384fd5b81518181111561079f57fe5b83810291506107af848301610cb3565b8181528481019084860184860187018a10156107c9578788fd5b8795505b838610156107eb5780518352600195909501949186019186016107cd565b5098975050505050505050565b6000806000806000806000806101c0898b031215610814578384fd5b61081d896106c9565b9750602061082c818b016106c9565b97508a605f8b011261083c578485fd5b61084660e0610cb3565b8060408c016101208d018e81111561085c578889fd5b885b600781101561088457825161087281610d03565b8552938501939185019160010161085e565b50829a508051995050505050506101408901519350610160890151925061018089015191506101a089015190509295985092959890939650565b60008060006104808085870312156108d4578384fd5b8451600581106108e2578485fd5b809450506020808601516108f581610d03565b9350605f86018713610905578283fd5b610910610440610cb3565b806040880189858a011115610923578586fd5b8594505b6022851015610946578051835260019490940193918301918301610927565b50809450505050509250925092565b600080600080600080600080610100898b031215610971578384fd5b885197506020890151965060408901519550606089015194506080890151935061099d60a08a016106c9565b92506109ab60c08a016106c9565b91506109b960e08a016106c9565b90509295985092959890939650565b6000602082840312156109d9578081fd5b815167ffffffffffffffff808211156109f0578283fd5b818401915084601f830112610a03578283fd5b815181811115610a0f57fe5b610a22601f8201601f1916602001610cb3565b9150808252856020828501011115610a38578384fd5b610a49816020840160208601610cd7565b50949350505050565b6001600160a01b03169052565b8060005b6007811015610a8b5781516001600160a01b0316845260209384019390910190600101610a63565b50505050565b8060005b6022811015610a8b578151845260209384019390910190600101610a95565b6000815180845260208085018081965082840281019150828601855b85811015610b665782840389528151610500815160058110610aee57fe5b865281870151610b0088880182610a52565b50604080830151610b1382890182610a91565b505060608201516104808701526080820151816104a0880152610b3882880182610b79565b60a08401516104c089015260c0909301516104e0909701969096525098850198935090840190600101610ad0565b5091979650505050505050565b15159052565b60008151808452610b91816020860160208601610cd7565b601f01601f19169290920160200192915050565b6001600160a01b03929092168252602082015260400190565b60208082526010908201526f1cde5b589bdb081b9bdd08199bdd5b9960821b604082015260600190565b600060208252610bfc602083018451610b73565b6020830151610c0e6040840182610b73565b506040830151610c216060840182610a5f565b506060830151610140830152608083015161016083015260a083015161018083015260c08301516101a083015260e08301516101c08301526101008301516101e080840152610c74610200840182610ab4565b949350505050565b815181526020918201519181019190915260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff81118282101715610ccf57fe5b604052919050565b60005b83811015610cf2578181015183820152602001610cda565b83811115610a8b5750506000910152565b6001600160a01b0381168114610d1857600080fd5b5056fea26469706673582212200786c5f10f2d0898c1170ab8cbe05cda64e84ecef84961404a9855420a49957164736f6c63430007040033";
