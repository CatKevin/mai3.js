/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Reader } from "./Reader";

export class ReaderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  connect(signer: Signer): ReaderFactory {
    return super.connect(signer) as ReaderFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "perpetualIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountStorage",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "cash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "position",
            type: "int256",
          },
        ],
        internalType: "struct MarginAccount",
        name: "marginAccount",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
    ],
    name: "getLiquidityPoolStorage",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "operator",
            type: "address",
          },
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "governor",
            type: "address",
          },
          {
            internalType: "address",
            name: "shareToken",
            type: "address",
          },
          {
            internalType: "int256",
            name: "vaultFeeRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolCash",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "fundingTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "symbol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "underlyingAsset",
                type: "string",
              },
              {
                internalType: "enum PerpetualState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "int256",
                name: "markPrice",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "indexPrice",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "unitAccumulativeFunding",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "initialMarginRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "maintenanceMarginRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "operatorFeeRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "lpFeeRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "referrerRebateRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "liquidationPenaltyRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "keeperGasReward",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "insuranceFundRate",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "insuranceFundCap",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "insuranceFund",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "donatedInsuranceFund",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "halfSpread",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "openSlippageFactor",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "closeSlippageFactor",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "fundingRateLimit",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammMaxLeverage",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammCashBalance",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammPositionAmount",
                type: "int256",
              },
            ],
            internalType: "struct Reader.PerpetualStorage[]",
            name: "perpetualStorages",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.LiquidityPoolStorage",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f9b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063574408c11461003b578063eb16510d14610064575b600080fd5b61004e61004936600461092b565b610084565b60405161005b9190610e1b565b60405180910390f35b610077610072366004610963565b610280565b60405161005b9190610ec2565b61008c610707565b600080610097610780565b61009f61079e565b856001600160a01b0316630cdc105a6040518163ffffffff1660e01b81526004016101406040518083038186803b1580156100d957600080fd5b505afa1580156100ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906109a4565b60e089015282516020808501516001600160a01b039081168b526040808701518216838d01526060808801518316828e01526080808901518416918e019190915260a0978801518316908d01528551968c01969096529381015160c08b015284516302c03f6d60e41b81529451919850919650600095509187169350632c03f6d09260048181019391829003018186803b1580156101ae57600080fd5b505afa1580156101c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e69190610947565b90508167ffffffffffffffff811180156101ff57600080fd5b5060405190808252806020026020018201604052801561023957816020015b6102266107bc565b81526020019060019003908161021e5790505b5061010085015260005b828110156102775761026f856101000151828151811061025f57fe5b6020026020010151838884610313565b600101610243565b50505050919050565b610288610881565b604051637d3ba80f60e01b81526001600160a01b03851690637d3ba80f906102b69086908690600401610ee2565b604080518083038186803b1580156102cd57600080fd5b505afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610b71565b602083015281529392505050565b61031b61089b565b6040516204966760e11b81526001600160a01b0384169062092cce90610345908590600401610ed9565b6102c060405180830381600087803b15801561036057600080fd5b505af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610ada565b6001600160a01b0382166060890152925082604088018360048111156103ba57fe5b60048111156103c557fe5b9052508291506001905060200201516080860152806002602002015160a0860152806003602002015160c0860152806004602002015160e08601528060056020020151610100860152806006602002015161012086015280600760200201516101408601528060086020020151610160860152806009602002015161018086015280600a60200201516101a086015280600b60200201516101c086015280600c60200201516101e086015280600d602002015161020086015280600e602002015161022086015280600f60200201516102408601528060106020020151610260860152806011602002015161028086015280601260200201516102a08601528060136020020151856102c00181815250505083606001516001600160a01b0316637158da7c6040518163ffffffff1660e01b815260040160006040518083038186803b15801561051457600080fd5b505afa158015610528573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105509190810190610b94565b6020850152604051637d3ba80f60e01b81526001600160a01b03831690637d3ba80f906105839084908690600401610ee2565b604080518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610b71565b6103008601526102e08501526105e98383836105f1565b909352505050565b60006060846001600160a01b031663745a3f7485856040518363ffffffff1660e01b8152600401610623929190610dd8565b60006040518083038186803b15801561063b57600080fd5b505afa15801561064f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106779190810190610a39565b805190915060018110156106a65760405162461bcd60e51b815260040161069d90610df1565b60405180910390fd5b60001960005b828110156106e4576106da8482815181106106c357fe5b6020026020010151836106ef90919063ffffffff16565b91506001016106ac565b509695505050505050565b60008183106106fe5781610700565b825b9392505050565b60405180610120016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b6040518060c001604052806006906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60408051610320810182526000808252606060208301529091820190815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518061028001604052806014906020820280368337509192915050565b600082601f8301126108ca578081fd5b6040516040810181811067ffffffffffffffff821117156108e757fe5b8060405250809150828460408501111561090057600080fd5b60005b6002811015610922578151835260209283019290910190600101610903565b50505092915050565b60006020828403121561093c578081fd5b813561070081610f4d565b600060208284031215610958578081fd5b815161070081610f4d565b600080600060608486031215610977578182fd5b833561098281610f4d565b925060208401359150604084013561099981610f4d565b809150509250925092565b60008060008061014085870312156109ba578081fd5b85601f8601126109c8578081fd5b6109d260c0610ef9565b808660c08801898111156109e4578485fd5b845b6006811015610a0f5782516109fa81610f4d565b855260209485019492909201916001016109e6565b50829750610a1d8a826108ba565b6101008a0151610120909a0151989b909a509650505050505050565b60006020808385031215610a4b578182fd5b825167ffffffffffffffff80821115610a62578384fd5b818501915085601f830112610a75578384fd5b815181811115610a8157fe5b8381029150610a91848301610ef9565b8181528481019084860184860187018a1015610aab578788fd5b8795505b83861015610acd578051835260019590950194918601918601610aaf565b5098975050505050505050565b60008060006102c0808587031215610af0578384fd5b845160058110610afe578485fd5b80945050602080860151610b1181610f4d565b9350605f86018713610b21578283fd5b610b2c610280610ef9565b806040880189858a011115610b3f578586fd5b8594505b6014851015610b62578051835260019490940193918301918301610b43565b50809450505050509250925092565b60008060408385031215610b83578182fd5b505080516020909101519092909150565b600060208284031215610ba5578081fd5b815167ffffffffffffffff80821115610bbc578283fd5b818401915084601f830112610bcf578283fd5b815181811115610bdb57fe5b610bee601f8201601f1916602001610ef9565b9150808252856020828501011115610c04578384fd5b610c15816020840160208601610f1d565b50949350505050565b6001600160a01b03169052565b6000815180845260208085018081965082840281019150828601855b85811015610d91578284038952815161032081518652868201518188880152610c7282880182610dac565b915050604080830151610c8782890182610d9e565b5050606080830151610c9b82890182610c1e565b50506080828101519087015260a0808301519087015260c0808301519087015260e08083015190870152610100808301519087015261012080830151908701526101408083015190870152610160808301519087015261018080830151908701526101a080830151908701526101c080830151908701526101e08083015190870152610200808301519087015261022080830151908701526102408083015190870152610260808301519087015261028080830151908701526102a080830151908701526102c080830151908701526102e080830151908701526103009182015191909501529784019790840190600101610c47565b5091979650505050505050565b60058110610da857fe5b9052565b60008151808452610dc4816020860160208601610f1d565b601f01601f19169290920160200192915050565b6001600160a01b03929092168252602082015260400190565b60208082526010908201526f1cde5b589bdb081b9bdd08199bdd5b9960821b604082015260600190565b600060208252610e2f602083018451610c1e565b6020830151610e416040840182610c1e565b506040830151610e546060840182610c1e565b506060830151610e676080840182610c1e565b506080830151610e7a60a0840182610c1e565b5060a083015160c083015260c083015160e083015260e0830151610100818185015280850151915050610120808185015250610eba610140840182610c2b565b949350505050565b815181526020918201519181019190915260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff81118282101715610f1557fe5b604052919050565b60005b83811015610f38578181015183820152602001610f20565b83811115610f47576000848401525b50505050565b6001600160a01b0381168114610f6257600080fd5b5056fea26469706673582212205a960ff669da4dbcf3090c738d562709d56445ebb422ec2d745d5b556999323664736f6c63430007040033";
