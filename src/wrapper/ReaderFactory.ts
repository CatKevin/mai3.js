/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Reader } from "./Reader";

export class ReaderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  connect(signer: Signer): ReaderFactory {
    return super.connect(signer) as ReaderFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "perpetualIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountStorage",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "cash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "position",
            type: "int256",
          },
        ],
        internalType: "struct MarginAccount",
        name: "marginAccount",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
    ],
    name: "getLiquidityPoolStorage",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRunning",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFastCreationEnabled",
            type: "bool",
          },
          {
            internalType: "address[7]",
            name: "addresses",
            type: "address[7]",
          },
          {
            internalType: "int256",
            name: "vaultFeeRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolCash",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "collateralDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perpetualCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum PerpetualState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "int256[34]",
                name: "nums",
                type: "int256[34]",
              },
              {
                internalType: "uint256",
                name: "symbol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "underlyingAsset",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isMarketClosed",
                type: "bool",
              },
              {
                internalType: "int256",
                name: "ammCashBalance",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammPositionAmount",
                type: "int256",
              },
            ],
            internalType: "struct Reader.PerpetualReaderResult[]",
            name: "perpetuals",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.LiquidityPoolReaderResult",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e15806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063574408c11461003b578063eb16510d14610064575b600080fd5b61004e610049366004610769565b610084565b60405161005b9190610cac565b60405180910390f35b6100776100723660046107a1565b61024b565b60405161005b9190610d40565b61008c610662565b6000826001600160a01b0316630cdc105a6040518163ffffffff1660e01b81526004016101c06040518083038186803b1580156100c857600080fd5b505afa1580156100dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610100919061089d565b60e08a015260a0890191909152608088019190915260608701919091526040860182905291151560208601529115158452915060009081602002015190506000816001600160a01b0316632c03f6d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561017957600080fd5b505afa15801561018d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b19190610785565b90508267ffffffffffffffff811180156101ca57600080fd5b5060405190808252806020026020018201604052801561020457816020015b6101f16106b2565b8152602001906001900390816101e95790505b5061010085015260005b838110156102425761023a856101000151828151811061022a57fe5b60200260200101518388846102eb565b60010161020e565b50505050919050565b6102536106fd565b604051637d3ba80f60e01b81526001600160a01b03851690637d3ba80f906102819086908690600401610d60565b61010060405180830381600087803b15801561029c57600080fd5b505af11580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d491906109fa565b505050506020850192909252505081529392505050565b6040516204966760e11b81526001600160a01b0383169062092cce90610315908490600401610d57565b61048060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103689190610963565b604087018190526001600160a01b03821660208801528683600481111561038b57fe5b600481111561039657fe5b8152505050506103a783838361054c565b84606001818152505083602001516001600160a01b0316637158da7c6040518163ffffffff1660e01b815260040160006040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104299190810190610a6d565b846080018190525083602001516001600160a01b031663b7e86c1f6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561047057600080fd5b505af1158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190610883565b151560a0850152604051637d3ba80f60e01b81526001600160a01b03831690637d3ba80f906104dd9084908690600401610d60565b61010060405180830381600087803b1580156104f857600080fd5b505af115801561050c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053091906109fa565b5050505060e0880192909252505060c090940193909352505050565b60006060846001600160a01b031663745a3f7485856040518363ffffffff1660e01b815260040161057e929190610c69565b60006040518083038186803b15801561059657600080fd5b505afa1580156105aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105d291908101906107e2565b805190915060018110156106015760405162461bcd60e51b81526004016105f890610c82565b60405180910390fd5b60001960005b8281101561063f5761063584828151811061061e57fe5b60200260200101518361064a90919063ffffffff16565b9150600101610607565b509695505050505050565b6000818310610659578161065b565b825b9392505050565b604080516101208101825260008082526020820152908101610682610717565b81526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040805161010081018252600080825260208201529081016106d2610735565b8152602001600081526020016060815260200160001515815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518061044001604052806022906020820280368337509192915050565b8051801515811461076457600080fd5b919050565b60006020828403121561077a578081fd5b813561065b81610dc7565b600060208284031215610796578081fd5b815161065b81610dc7565b6000806000606084860312156107b5578182fd5b83356107c081610dc7565b92506020840135915060408401356107d781610dc7565b809150509250925092565b600060208083850312156107f4578182fd5b825167ffffffffffffffff8082111561080b578384fd5b818501915085601f83011261081e578384fd5b81518181111561082a57fe5b838102915061083a848301610d77565b8181528481019084860184860187018a1015610854578788fd5b8795505b83861015610876578051835260019590950194918601918601610858565b5098975050505050505050565b600060208284031215610894578081fd5b61065b82610754565b6000806000806000806000806101c0898b0312156108b9578384fd5b6108c289610754565b975060206108d1818b01610754565b97508a605f8b01126108e1578485fd5b6108eb60e0610d77565b8060408c016101208d018e811115610901578889fd5b885b600781101561092957825161091781610dc7565b85529385019391850191600101610903565b50829a508051995050505050506101408901519350610160890151925061018089015191506101a089015190509295985092959890939650565b6000806000610480808587031215610979578384fd5b845160058110610987578485fd5b8094505060208086015161099a81610dc7565b9350605f860187136109aa578283fd5b6109b5610440610d77565b806040880189858a0111156109c8578586fd5b8594505b60228510156109eb5780518352600194909401939183019183016109cc565b50809450505050509250925092565b600080600080600080600080610100898b031215610a16578384fd5b8851975060208901519650604089015195506060890151945060808901519350610a4260a08a01610754565b9250610a5060c08a01610754565b9150610a5e60e08a01610754565b90509295985092959890939650565b600060208284031215610a7e578081fd5b815167ffffffffffffffff80821115610a95578283fd5b818401915084601f830112610aa8578283fd5b815181811115610ab457fe5b610ac7601f8201601f1916602001610d77565b9150808252856020828501011115610add578384fd5b610aee816020840160208601610d9b565b50949350505050565b6001600160a01b03169052565b8060005b6007811015610b305781516001600160a01b0316845260209384019390910190600101610b08565b50505050565b8060005b6022811015610b30578151845260209384019390910190600101610b3a565b6000815180845260208085018081965082840281019150828601855b85811015610c1c5782840389528151610520610b92868351610c2f565b86820151610ba288880182610af7565b50604080830151610bb582890182610b36565b505060608201516104808701526080820151816104a0880152610bda82880182610c3d565b91505060a0820151610bf06104c0880182610c29565b5060c08201516104e087015260e090910151610500909501949094529784019790840190600101610b75565b5091979650505050505050565b15159052565b60058110610c3957fe5b9052565b60008151808452610c55816020860160208601610d9b565b601f01601f19169290920160200192915050565b6001600160a01b03929092168252602082015260400190565b60208082526010908201526f1cde5b589bdb081b9bdd08199bdd5b9960821b604082015260600190565b600060208252610cc0602083018451610c29565b6020830151610cd26040840182610c29565b506040830151610ce56060840182610b04565b506060830151610140830152608083015161016083015260a083015161018083015260c08301516101a083015260e08301516101c08301526101008301516101e080840152610d38610200840182610b59565b949350505050565b815181526020918201519181019190915260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff81118282101715610d9357fe5b604052919050565b60005b83811015610db6578181015183820152602001610d9e565b83811115610b305750506000910152565b6001600160a01b0381168114610ddc57600080fd5b5056fea26469706673582212204899f28139540c9c3f23ce434ac776d0aa249088772a15a58c86eefbf04669e464736f6c63430007040033";
