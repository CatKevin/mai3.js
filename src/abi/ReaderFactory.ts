/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Reader } from "./Reader";

export class ReaderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Reader> {
    return super.deploy(overrides || {}) as Promise<Reader>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Reader {
    return super.attach(address) as Reader;
  }
  connect(signer: Signer): ReaderFactory {
    return super.connect(signer) as ReaderFactory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "perpetualIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountStorage",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "cash",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "position",
            type: "int256",
          },
        ],
        internalType: "struct MarginAccount",
        name: "marginAccount",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityPool",
        type: "address",
      },
    ],
    name: "getLiquidityPoolStorage",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isRunning",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFastCreationEnabled",
            type: "bool",
          },
          {
            internalType: "address[7]",
            name: "addresses",
            type: "address[7]",
          },
          {
            internalType: "int256",
            name: "vaultFeeRate",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "poolCash",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "collateralDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perpetualCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fundingTime",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "enum PerpetualState",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "int256[34]",
                name: "nums",
                type: "int256[34]",
              },
              {
                internalType: "uint256",
                name: "symbol",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "underlyingAsset",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isMarketClosed",
                type: "bool",
              },
              {
                internalType: "int256",
                name: "ammCashBalance",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "ammPositionAmount",
                type: "int256",
              },
            ],
            internalType: "struct Reader.PerpetualReaderResult[]",
            name: "perpetuals",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.LiquidityPoolReaderResult",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eb7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063574408c11461003b578063eb16510d14610064575b600080fd5b61004e61004936600461080b565b610084565b60405161005b9190610d4e565b60405180910390f35b610077610072366004610843565b61029e565b60405161005b9190610de2565b61008c610704565b816001600160a01b0316637086fd326040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156100c757600080fd5b505af11580156100db573d6000803e3d6000fd5b505050506000826001600160a01b0316630cdc105a6040518163ffffffff1660e01b81526004016101c06040518083038186803b15801561011b57600080fd5b505afa15801561012f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610153919061093f565b60e08a015260a0890191909152608088019190915260608701919091526040860182905291151560208601529115158452915060009081602002015190506000816001600160a01b03166307c4d4866040518163ffffffff1660e01b815260040160206040518083038186803b1580156101cc57600080fd5b505afa1580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102049190610827565b90508267ffffffffffffffff8111801561021d57600080fd5b5060405190808252806020026020018201604052801561025757816020015b610244610754565b81526020019060019003908161023c5790505b5061010085015260005b838110156102955761028d856101000151828151811061027d57fe5b6020026020010151838884610391565b600101610261565b50505050919050565b6102a661079f565b836001600160a01b0316637086fd326040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b5050604051637d3ba80f60e01b81526001600160a01b0387169250637d3ba80f91506103279086908690600401610e02565b61010060405180830381600087803b15801561034257600080fd5b505af1158015610356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037a9190610a9c565b505050506020850192909252505081529392505050565b6040516204966760e11b81526001600160a01b0383169062092cce906103bb908490600401610df9565b6104806040518083038186803b1580156103d457600080fd5b505afa1580156103e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040c9190610a05565b604087018190526001600160a01b03821660208801528683600481111561042f57fe5b600481111561043a57fe5b81525050505061044b8383836105ee565b84606001818152505083602001516001600160a01b0316637158da7c6040518163ffffffff1660e01b815260040160006040518083038186803b15801561049157600080fd5b505afa1580156104a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104cd9190810190610b0f565b846080018190525083602001516001600160a01b031663b7e86c1f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051257600080fd5b505afa158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a9190610925565b151560a0850152604051637d3ba80f60e01b81526001600160a01b03831690637d3ba80f9061057f9084908690600401610e02565b61010060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610a9c565b5050505060e0880192909252505060c090940193909352505050565b60006060846001600160a01b031663745a3f7485856040518363ffffffff1660e01b8152600401610620929190610d0b565b60006040518083038186803b15801561063857600080fd5b505afa15801561064c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106749190810190610884565b805190915060018110156106a35760405162461bcd60e51b815260040161069a90610d24565b60405180910390fd5b60001960005b828110156106e1576106d78482815181106106c057fe5b6020026020010151836106ec90919063ffffffff16565b91506001016106a9565b509695505050505050565b60008183106106fb57816106fd565b825b9392505050565b6040805161012081018252600080825260208201529081016107246107b9565b81526020016000815260200160008152602001600081526020016000815260200160008152602001606081525090565b6040805161010081018252600080825260208201529081016107746107d7565b8152602001600081526020016060815260200160001515815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518060e001604052806007906020820280368337509192915050565b6040518061044001604052806022906020820280368337509192915050565b8051801515811461080657600080fd5b919050565b60006020828403121561081c578081fd5b81356106fd81610e69565b600060208284031215610838578081fd5b81516106fd81610e69565b600080600060608486031215610857578182fd5b833561086281610e69565b925060208401359150604084013561087981610e69565b809150509250925092565b60006020808385031215610896578182fd5b825167ffffffffffffffff808211156108ad578384fd5b818501915085601f8301126108c0578384fd5b8151818111156108cc57fe5b83810291506108dc848301610e19565b8181528481019084860184860187018a10156108f6578788fd5b8795505b838610156109185780518352600195909501949186019186016108fa565b5098975050505050505050565b600060208284031215610936578081fd5b6106fd826107f6565b6000806000806000806000806101c0898b03121561095b578384fd5b610964896107f6565b97506020610973818b016107f6565b97508a605f8b0112610983578485fd5b61098d60e0610e19565b8060408c016101208d018e8111156109a3578889fd5b885b60078110156109cb5782516109b981610e69565b855293850193918501916001016109a5565b50829a508051995050505050506101408901519350610160890151925061018089015191506101a089015190509295985092959890939650565b6000806000610480808587031215610a1b578384fd5b845160058110610a29578485fd5b80945050602080860151610a3c81610e69565b9350605f86018713610a4c578283fd5b610a57610440610e19565b806040880189858a011115610a6a578586fd5b8594505b6022851015610a8d578051835260019490940193918301918301610a6e565b50809450505050509250925092565b600080600080600080600080610100898b031215610ab8578384fd5b8851975060208901519650604089015195506060890151945060808901519350610ae460a08a016107f6565b9250610af260c08a016107f6565b9150610b0060e08a016107f6565b90509295985092959890939650565b600060208284031215610b20578081fd5b815167ffffffffffffffff80821115610b37578283fd5b818401915084601f830112610b4a578283fd5b815181811115610b5657fe5b610b69601f8201601f1916602001610e19565b9150808252856020828501011115610b7f578384fd5b610b90816020840160208601610e3d565b50949350505050565b6001600160a01b03169052565b8060005b6007811015610bd25781516001600160a01b0316845260209384019390910190600101610baa565b50505050565b8060005b6022811015610bd2578151845260209384019390910190600101610bdc565b6000815180845260208085018081965082840281019150828601855b85811015610cbe5782840389528151610520610c34868351610cd1565b86820151610c4488880182610b99565b50604080830151610c5782890182610bd8565b505060608201516104808701526080820151816104a0880152610c7c82880182610cdf565b91505060a0820151610c926104c0880182610ccb565b5060c08201516104e087015260e090910151610500909501949094529784019790840190600101610c17565b5091979650505050505050565b15159052565b60058110610cdb57fe5b9052565b60008151808452610cf7816020860160208601610e3d565b601f01601f19169290920160200192915050565b6001600160a01b03929092168252602082015260400190565b60208082526010908201526f1cde5b589bdb081b9bdd08199bdd5b9960821b604082015260600190565b600060208252610d62602083018451610ccb565b6020830151610d746040840182610ccb565b506040830151610d876060840182610ba6565b506060830151610140830152608083015161016083015260a083015161018083015260c08301516101a083015260e08301516101c08301526101008301516101e080840152610dda610200840182610bfb565b949350505050565b815181526020918201519181019190915260400190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60405181810167ffffffffffffffff81118282101715610e3557fe5b604052919050565b60005b83811015610e58578181015183820152602001610e40565b83811115610bd25750506000910152565b6001600160a01b0381168114610e7e57600080fd5b5056fea2646970667358221220969b6dee073c642c53a06923ffb1cea8564450ce6b0900666be67e0c2ca6883f64736f6c63430007040033";
