/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MinterInterface extends ethers.utils.Interface {
  functions: {
    "DEVELOPER_COMMISSION_RATE()": FunctionFragment;
    "MCB_MAX_SUPPLY()": FunctionFragment;
    "developer()": FunctionFragment;
    "genesisBlock()": FunctionFragment;
    "mcbToken()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DEVELOPER_COMMISSION_RATE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MCB_MAX_SUPPLY",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "developer", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "genesisBlock",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "mcbToken", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "DEVELOPER_COMMISSION_RATE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MCB_MAX_SUPPLY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "developer", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "genesisBlock",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mcbToken", data: BytesLike): Result;

  events: {
    "Mint(address,uint256,address,uint256)": EventFragment;
    "SetDeveloper(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Mint"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetDeveloper"): EventFragment;
}

export class Minter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MinterInterface;

  functions: {
    DEVELOPER_COMMISSION_RATE(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "DEVELOPER_COMMISSION_RATE()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    MCB_MAX_SUPPLY(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "MCB_MAX_SUPPLY()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    developer(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "developer()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    genesisBlock(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "genesisBlock()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    mcbToken(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "mcbToken()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  DEVELOPER_COMMISSION_RATE(overrides?: CallOverrides): Promise<BigNumber>;

  "DEVELOPER_COMMISSION_RATE()"(overrides?: CallOverrides): Promise<BigNumber>;

  MCB_MAX_SUPPLY(overrides?: CallOverrides): Promise<BigNumber>;

  "MCB_MAX_SUPPLY()"(overrides?: CallOverrides): Promise<BigNumber>;

  developer(overrides?: CallOverrides): Promise<string>;

  "developer()"(overrides?: CallOverrides): Promise<string>;

  genesisBlock(overrides?: CallOverrides): Promise<BigNumber>;

  "genesisBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

  mcbToken(overrides?: CallOverrides): Promise<string>;

  "mcbToken()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    DEVELOPER_COMMISSION_RATE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEVELOPER_COMMISSION_RATE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MCB_MAX_SUPPLY(overrides?: CallOverrides): Promise<BigNumber>;

    "MCB_MAX_SUPPLY()"(overrides?: CallOverrides): Promise<BigNumber>;

    developer(overrides?: CallOverrides): Promise<string>;

    "developer()"(overrides?: CallOverrides): Promise<string>;

    genesisBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "genesisBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    mcbToken(overrides?: CallOverrides): Promise<string>;

    "mcbToken()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    Mint(
      recipient: string | null,
      toRecipientAmount: null,
      developer: string | null,
      toDevAmount: null
    ): EventFilter;

    SetDeveloper(
      oldDeveloper: string | null,
      newDeveloper: string | null
    ): EventFilter;
  };

  estimateGas: {
    DEVELOPER_COMMISSION_RATE(overrides?: CallOverrides): Promise<BigNumber>;

    "DEVELOPER_COMMISSION_RATE()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MCB_MAX_SUPPLY(overrides?: CallOverrides): Promise<BigNumber>;

    "MCB_MAX_SUPPLY()"(overrides?: CallOverrides): Promise<BigNumber>;

    developer(overrides?: CallOverrides): Promise<BigNumber>;

    "developer()"(overrides?: CallOverrides): Promise<BigNumber>;

    genesisBlock(overrides?: CallOverrides): Promise<BigNumber>;

    "genesisBlock()"(overrides?: CallOverrides): Promise<BigNumber>;

    mcbToken(overrides?: CallOverrides): Promise<BigNumber>;

    "mcbToken()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    DEVELOPER_COMMISSION_RATE(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "DEVELOPER_COMMISSION_RATE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MCB_MAX_SUPPLY(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "MCB_MAX_SUPPLY()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    developer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "developer()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    genesisBlock(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "genesisBlock()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mcbToken(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "mcbToken()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
