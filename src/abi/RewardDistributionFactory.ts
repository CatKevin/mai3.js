/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { RewardDistribution } from "./RewardDistribution";

export class RewardDistributionFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    owner_: string,
    xMCB_: string,
    overrides?: Overrides
  ): Promise<RewardDistribution> {
    return super.deploy(
      owner_,
      xMCB_,
      overrides || {}
    ) as Promise<RewardDistribution>;
  }
  getDeployTransaction(
    owner_: string,
    xMCB_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(owner_, xMCB_, overrides || {});
  }
  attach(address: string): RewardDistribution {
    return super.attach(address) as RewardDistribution;
  }
  connect(signer: Signer): RewardDistributionFactory {
    return super.connect(signer) as RewardDistributionFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardDistribution {
    return new Contract(address, _abi, signerOrProvider) as RewardDistribution;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "xMCB_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodFinish",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    name: "RewardPlanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previousRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodFinish",
        type: "uint256",
      },
    ],
    name: "RewardRateChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beforeBurningToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "beforeMintingToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    name: "createRewardPlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getRewardPlan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "hasPlan",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newRewardRate",
        type: "uint256",
      },
    ],
    name: "setRewardRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xMCB",
    outputs: [
      {
        internalType: "contract IXMCB",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018c6380380620018c6833981810160405260408110156200003757600080fd5b50805160209091015160006200004c620000b7565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620018a6833981519152908290a3506200009082620000bb565b600180546001600160a01b0319166001600160a01b039290921691909117905550620001b9565b3390565b620000c5620000b7565b6000546001600160a01b0390811691161462000128576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166200016f5760405162461bcd60e51b8152600401808060200182810382526026815260200180620018806026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620018a683398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6116b780620001c96000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806390ebc8a4116100a2578063c4f59f9b11610071578063c4f59f9b1461033e578063c55dae6314610396578063d0fc78741461039e578063f1229777146103a6578063f2fde38b146103cc57610116565b806390ebc8a41461027b578063b66503cf146102ba578063be5c6396146102e6578063c00007b01461031857610116565b806345b35f56116100e957806345b35f56146101f5578063638634ee146101fd578063715018a614610223578063812a71d51461022b5780638da5cb5b1461025757610116565b80630bb872331461011b5780630e57ffae1461014f578063211dc32d1461018957806335cb0bb6146101c9575b600080fd5b61014d6004803603606081101561013157600080fd5b506001600160a01b0381351690602081013590604001356103f2565b005b6101756004803603602081101561016557600080fd5b50356001600160a01b031661042e565b604080519115158252519081900360200190f35b6101b76004803603604081101561019f57600080fd5b506001600160a01b0381358116916020013516610451565b60408051918252519081900360200190f35b61014d600480360360408110156101df57600080fd5b506001600160a01b038135169060200135610551565b61014d61072e565b6101b76004803603602081101561021357600080fd5b50356001600160a01b0316610766565b61014d6107aa565b61014d6004803603604081101561024157600080fd5b506001600160a01b03813516906020013561084c565b61025f6109cc565b604080516001600160a01b039092168252519081900360200190f35b6102a16004803603602081101561029157600080fd5b50356001600160a01b03166109db565b6040805192835260208301919091528051918290030190f35b61014d600480360360408110156102d057600080fd5b506001600160a01b038135169060200135610a01565b61014d600480360360608110156102fc57600080fd5b506001600160a01b038135169060208101359060400135610c0d565b61014d6004803603602081101561032e57600080fd5b50356001600160a01b0316610c3c565b610346610cf8565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561038257818101518382015260200161036a565b505050509050019250505060405180910390f35b61025f610d97565b61025f610da6565b6101b7600480360360208110156103bc57600080fd5b50356001600160a01b0316610db5565b61014d600480360360208110156103e257600080fd5b50356001600160a01b0316610e8c565b60006103fe6003610f84565b905060005b818110156104275761041f610419600383610f8f565b86610f9b565b600101610403565b5050505050565b6001600160a01b038181166000908152600260205260409020541615155b919050565b6001600160a01b0380831660009081526002602090815260408083206001548251630481930d60e21b81528787166004820152925194959194869491909216926312064c349260248083019392829003018186803b1580156104b257600080fd5b505afa1580156104c6573d6000803e3d6000fd5b505050506040513d60208110156104dc57600080fd5b50516001600160a01b038516600090815260068401602090815260408083205460058701909252909120549192506105469161054090670de0b6b3a76400009061053a906105339061052d8c610db5565b9061101f565b8690611061565b906110ba565b906110fc565b925050505b92915050565b610559611156565b6000546001600160a01b039081169116146105a9576040805162461bcd60e51b81526020600482018190526024820152600080516020611638833981519152604482015290519081900360640190fd5b6001600160a01b0382166105fb576040805162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103932bbb0b932103a37b5b2b760611b604482015290519081900360640190fd5b61060d826001600160a01b031661115a565b61065e576040805162461bcd60e51b815260206004820152601d60248201527f72657761726420746f6b656e206d75737420626520636f6e7472616374000000604482015290519081900360640190fd5b6106678261042e565b156106af576040805162461bcd60e51b8152602060048201526013602482015272706c616e20616c72656164792065786973747360681b604482015290519081900360640190fd5b6001600160a01b038216600081815260026020819052604090912080546001600160a01b0319169092178255018190556106ea600383611160565b506040805182815290516001600160a01b038416917f89389e361c4e4aaec5be02336e4c9d0ff15c7dc32e9078f697c162170f472213919081900360200190a25050565b600061073a6003610f84565b905060005b818110156107625761075a610755600383610f8f565b610c3c565b60010161073f565b5050565b6001600160a01b0381166000908152600260205260408120600181015461078b611175565b111561079b5780600101546107a3565b6107a3611175565b9392505050565b6107b2611156565b6000546001600160a01b03908116911614610802576040805162461bcd60e51b81526020600482018190526024820152600080516020611638833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610854611156565b6000546001600160a01b039081169116146108a4576040805162461bcd60e51b81526020600482018190526024820152600080516020611638833981519152604482015290519081900360640190fd5b816108ae8161042e565b6108f1576040805162461bcd60e51b815260206004820152600f60248201526e706c616e206e6f742065786973747360881b604482015290519081900360640190fd5b8260006108fe8282610f9b565b6001600160a01b03851660009081526002602052604090208461092d57610923611175565b6001820155610975565b6001810154156109755761096f610942611175565b6105408761053a85600201546109698760030154886001015461101f90919063ffffffff16565b90611061565b60018201555b60028101546001820154604080519283526020830188905282810191909152517f3d209aed8ecb665e2e6cc55772bfc177e7aa7f6fa40ce4af171a43ed8fa2e2db9181900360600190a16002019390935550505050565b6000546001600160a01b031690565b6001600160a01b0316600090815260026020819052604090912060018101549101549091565b610a09611156565b6000546001600160a01b03908116911614610a59576040805162461bcd60e51b81526020600482018190526024820152600080516020611638833981519152604482015290519081900360640190fd5b81610a638161042e565b610aa6576040805162461bcd60e51b815260206004820152600f60248201526e706c616e206e6f742065786973747360881b604482015290519081900360640190fd5b826000610ab38282610f9b565b60008411610af9576040805162461bcd60e51b815260206004820152600e60248201526d726577617264206973207a65726f60901b604482015290519081900360640190fd5b6001600160a01b038516600090815260026020819052604090912090810154610b5e576040805162461bcd60e51b815260206004820152601260248201527172657761726452617465206973207a65726f60701b604482015290519081900360640190fd5b6000610b778260020154876110ba90919063ffffffff16565b90508160010154610b86611175565b1115610baf57610b94611175565b6003830155610ba581610540611175565b6001830155610bc4565b6001820154610bbe90826110fc565b60018301555b600182015460408051888152602081019290925280517f6c07ee05dcf262f13abf9d87b846ee789d2f90fe991d495acd7d7fc109ee1f559281900390910190a150505050505050565b6000610c196003610f84565b905060005b8181101561042757610c34610419600383610f8f565b600101610c1e565b80610c45611156565b610c4f8282610f9b565b6001600160a01b038316600090815260026020526040812090610c70611156565b90506000610c7e8683610451565b90508015610cf0576001600160a01b0380831660009081526006850160205260408120558354610cb091168383611179565b6040805182815290516001600160a01b038416917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505050505050565b60606000610d066003610f84565b905060608167ffffffffffffffff81118015610d2157600080fd5b50604051908082528060200260200182016040528015610d4b578160200160208202803683370190505b50905060005b82811015610d9057610d64600382610f8f565b828281518110610d7057fe5b6001600160a01b0390921660209283029190910190910152600101610d51565b5091505090565b6001546001600160a01b031690565b6001546001600160a01b031681565b6001600160a01b0380821660009081526002602090815260408083206001548251632964b67b60e21b81529251949591948694919092169263a592d9ec9260048083019392829003018186803b158015610e0e57600080fd5b505afa158015610e22573d6000803e3d6000fd5b505050506040513d6020811015610e3857600080fd5b5051905080610e4d575060040154905061044c565b610e84610e798261053a670de0b6b3a76400006109698760020154610969896003015461052d8d610766565b6004840154906110fc565b949350505050565b610e94611156565b6000546001600160a01b03908116911614610ee4576040805162461bcd60e51b81526020600482018190526024820152600080516020611638833981519152604482015290519081900360640190fd5b6001600160a01b038116610f295760405162461bcd60e51b81526004018080602001828103825260268152602001806115f16026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061054b826111cb565b60006107a383836111cf565b6001600160a01b0382166000908152600260205260409020610fbc83610db5565b6004820155610fca83610766565b60038201556001600160a01b0382161561101a57610fe88383610451565b6001600160a01b0383166000908152600683016020908152604080832093909355600484015460058501909152919020555b505050565b60006107a383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611233565b6000826110705750600061054b565b8282028284828161107d57fe5b04146107a35760405162461bcd60e51b81526004018080602001828103825260218152602001806116176021913960400191505060405180910390fd5b60006107a383836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506112ca565b6000828201838110156107a3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b3b151590565b60006107a3836001600160a01b03841661132f565b4390565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261101a908490611379565b5490565b815460009082106112115760405162461bcd60e51b81526004018080602001828103825260228152602001806115cf6022913960400191505060405180910390fd5b82600001828154811061122057fe5b9060005260206000200154905092915050565b600081848411156112c25760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561128757818101518382015260200161126f565b50505050905090810190601f1680156112b45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600081836113195760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561128757818101518382015260200161126f565b50600083858161132557fe5b0495945050505050565b600061133b838361142a565b6113715750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561054b565b50600061054b565b60606113ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114429092919063ffffffff16565b80519091501561101a578080602001905160208110156113ed57600080fd5b505161101a5760405162461bcd60e51b815260040180806020018281038252602a815260200180611658602a913960400191505060405180910390fd5b60009081526001919091016020526040902054151590565b6060610e848484600085856114568561115a565b6114a7576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106114e65780518252601f1990920191602091820191016114c7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611548576040519150601f19603f3d011682016040523d82523d6000602084013e61154d565b606091505b509150915061155d828286611568565b979650505050505050565b606083156115775750816107a3565b8251156115875782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561128757818101518382015260200161126f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212206ca153b590b6acad37953697b3da53b85ac02d6e093a1f2ae9ea067fd85c764564736f6c634300070400334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";
